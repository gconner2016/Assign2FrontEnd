{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport router from '../router';\nimport { APIService } from '../http/APIService';\nconst apiService = new APIService();\nexport default {\n  name: 'Register',\n  data: () => ({\n    credentials: {},\n    password: \"\",\n    repassword: \"\",\n    valid: true,\n    showMsg: '',\n    loading: false,\n    rules: {\n      username: [v => !!v || \"Username is required\", v => v && v.length > 3 || \"A username must be more than 3 characters long\", v => /^[a-z0-9_]+$/.test(v) || \"A username can only contain letters and digits\"],\n      password: [v => !!v || \"Password is required\", v => v && v.length > 7 || \"The password must be longer than 7 characters\"],\n      email: [v => !!v || \"Email is required\"],\n      repassword: [v => v == this.password || 'Passwords must match']\n    },\n    showPassword: false\n  }),\n  methods: {\n    register() {\n      apiService.registerUser(this.credentials).then(response => {\n        if (response.status === 201) {\n          this.movie = response.data;\n          this.showMsg = \"\";\n          router.push('/auth/');\n        } else {\n          this.showMsg = \"error\";\n        }\n      }).catch(error => {\n        if (error.response.status === 401) {\n          router.push(\"/auth\");\n        } else if (error.response.status === 400) {\n          this.showMsg = \"error\";\n        }\n      });\n    }\n  },\n  computed: {\n    passwordConfirmationRule() {\n      return this.password === this.repassword || 'Password must match';\n    }\n  }\n};","map":{"version":3,"names":["router","APIService","apiService","name","data","credentials","password","repassword","valid","showMsg","loading","rules","username","v","length","test","email","showPassword","methods","register","registerUser","then","response","status","movie","push","catch","error","computed","passwordConfirmationRule"],"sources":["C:\\Users\\Gabriel\\Desktop\\Travel-Agency-Final\\Assign2FrontEnd\\src\\components\\Register.vue"],"sourcesContent":["<template>\r\n <div class=\"container-fluid\">\r\n <div class=\"row align-items-center justify-content-center\">\r\n <div class=\"col col-12 col-sm-6 col-md-10 col-lg-6\">\r\n <div class=\"card\">\r\n <div class=\"card-header\">Register</div>\r\n <div v-if=\"showMsg === 'error'\" class=\"alert alert-danger\" role=\"alert\">\r\n Invalid username or password. Please Try again.\r\n </div>\r\n <div class=\"p-2\"> </div>\r\n <div class=\"card-body\">\r\n <div class=\"row align-items-center justify-content-center\" v-if=\"loading\">\r\n <!-- Creating the progress bar -->\r\n <div class=\"progress\">\r\n <div\r\n class=\"\r\n progress-bar progress-bar-striped progress-bar-animated\r\n \"\r\n role=\"progressbar\"\r\n aria-valuenow=\"75\"\r\n aria-valuemin=\"0\"\r\n aria-valuemax=\"100\"\r\n style=\"width: 75%\"\r\n ></div>\r\n </div>\r\n </div>\r\n <!-- Input Field Section -->\r\n <form v-else ref=\"form\">\r\n <div class=\"container-fuild\">\r\n <div class=\"form-group row justify-content-left py-2\">\r\n <label class=\"col-4\">Username</label>\r\n<div class=\"col col-8\">\r\n <input name=\"username\" v-model=\"credentials.username\"\r\ntype=\"text\" class=\"form-control-sm form-control\">\r\n </div>\r\n </div>\r\n<div class=\"form-group row justify-content-end py-2\">\r\n <label class=\"col-4\">Password</label>\r\n<div class=\"col col-8\">\r\n <input v-model=\"credentials.password\" type=\"password\"\r\nclass=\"form-control-sm form-control\">\r\n </div>\r\n </div>\r\n <div class=\"form-group row justify-content-left py-2\">\r\n <label class=\"col-4\">Re-enter password</label>\r\n <div class=\"col col-8\">\r\n <input v-model=\"credentials.password2\" type=\"password\"\r\nclass=\"form-control-sm form-control\">\r\n </div>\r\n </div>\r\n <div class=\"form-group row justify-content-left py-2\">\r\n <label class=\"col-4\">Email</label>\r\n<div class=\"col col-8\">\r\n <input v-model=\"credentials.email\" type=\"email\" class=\"form\u0002control-sm form-control\">\r\n </div>\r\n </div>\r\n <div class=\"form-group row justify-content-left py-2\">\r\n <label class=\"col-4\">First Name</label>\r\n <div class=\"col col-8\">\r\n <input v-model=\"credentials.first_name\" type=\"text\" class=\"form\u0002control-sm form-control\">\r\n </div>\r\n </div>\r\n <div class=\"form-group row justify-content-left py-2\">\r\n <label class=\"col-4\">Last Name</label>\r\n<div class=\"col col-8\">\r\n <input v-model=\"credentials.last_name\" type=\"text\" class=\"form\u0002control-sm form-control\">\r\n </div>\r\n </div>\r\n<div class=\"row justify-content-around\">\r\n <div type=\"button\" class=\"btn btn-secondary col-6\"\r\n@click=\"login\">Back to Login</div>\r\n <div type=\"button\" class=\"btn btn-primary col-4\"\r\n@click=\"register\">Register</div>\r\n </div>\r\n </div>\r\n </form>\r\n </div>\r\n </div>\r\n </div>\r\n </div>\r\n </div>\r\n</template>\r\n<script>\r\n import router from '../router';\r\n import {APIService} from '../http/APIService';\r\n const apiService = new APIService();\r\n export default {\r\n name: 'Register',\r\n data: () => ({\r\n credentials: {},\r\n password: \"\",\r\n repassword: \"\",\r\n valid: true,\r\n showMsg: '',\r\n loading: false,\r\n rules: {\r\n username: [\r\n v => !!v || \"Username is required\",\r\n v => (v && v.length > 3) || \"A username must be more than 3 characters long\",\r\n v => /^[a-z0-9_]+$/.test(v) || \"A username can only contain letters and digits\"\r\n ],\r\n password: [\r\n v => !!v || \"Password is required\",\r\n v => (v && v.length > 7) || \"The password must be longer than 7 characters\"\r\n ],\r\n email: [\r\n v => !!v || \"Email is required\"\r\n ],\r\n repassword: [\r\n v => (v == this.password) || 'Passwords must match'\r\n ]\r\n },\r\n showPassword: false,\r\n }),\r\n methods: {\r\n register() {\r\n\r\n apiService.registerUser(this.credentials).then(response => {\r\n if (response.status === 201) {\r\n this.movie = response.data;\r\n this.showMsg = \"\";\r\n router.push('/auth/');\r\n }else{\r\n this.showMsg = \"error\";\r\n }\r\n }).catch(error => {\r\n if (error.response.status === 401) {\r\n router.push(\"/auth\");\r\n }else if (error.response.status === 400) {\r\n this.showMsg = \"error\";\r\n }\r\n });\r\n },\r\n },\r\n computed: {\r\n passwordConfirmationRule() {\r\n return (this.password === this.repassword) || 'Password must match'\r\n }\r\n }\r\n }\r\n</script>"],"mappings":";AAmFC,OAAOA,MAAK,MAAO,WAAW;AAC9B,SAAQC,UAAU,QAAO,oBAAoB;AAC7C,MAAMC,UAAS,GAAI,IAAID,UAAU,EAAE;AACnC,eAAe;EACfE,IAAI,EAAE,UAAU;EAChBC,IAAI,EAAEA,CAAA,MAAO;IACbC,WAAW,EAAE,CAAC,CAAC;IACfC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,EAAE;IACdC,KAAK,EAAE,IAAI;IACXC,OAAO,EAAE,EAAE;IACXC,OAAO,EAAE,KAAK;IACdC,KAAK,EAAE;MACPC,QAAQ,EAAE,CACVC,CAAA,IAAK,CAAC,CAACA,CAAA,IAAK,sBAAsB,EAClCA,CAAA,IAAMA,CAAA,IAAKA,CAAC,CAACC,MAAK,GAAI,CAAC,IAAK,gDAAgD,EAC5ED,CAAA,IAAK,cAAc,CAACE,IAAI,CAACF,CAAC,KAAK,gDAA+C,CAC7E;MACDP,QAAQ,EAAE,CACVO,CAAA,IAAK,CAAC,CAACA,CAAA,IAAK,sBAAsB,EAClCA,CAAA,IAAMA,CAAA,IAAKA,CAAC,CAACC,MAAK,GAAI,CAAC,IAAK,+CAA8C,CACzE;MACDE,KAAK,EAAE,CACPH,CAAA,IAAK,CAAC,CAACA,CAAA,IAAK,mBAAkB,CAC7B;MACDN,UAAU,EAAE,CACZM,CAAA,IAAMA,CAAA,IAAK,IAAI,CAACP,QAAQ,IAAK,sBAAqB;IAElD,CAAC;IACDW,YAAY,EAAE;EACd,CAAC,CAAC;EACFC,OAAO,EAAE;IACTC,QAAQA,CAAA,EAAG;MAEXjB,UAAU,CAACkB,YAAY,CAAC,IAAI,CAACf,WAAW,CAAC,CAACgB,IAAI,CAACC,QAAO,IAAK;QAC3D,IAAIA,QAAQ,CAACC,MAAK,KAAM,GAAG,EAAE;UAC7B,IAAI,CAACC,KAAI,GAAIF,QAAQ,CAAClB,IAAI;UAC1B,IAAI,CAACK,OAAM,GAAI,EAAE;UACjBT,MAAM,CAACyB,IAAI,CAAC,QAAQ,CAAC;QACrB,CAAC,MAAI;UACL,IAAI,CAAChB,OAAM,GAAI,OAAO;QACtB;MACA,CAAC,CAAC,CAACiB,KAAK,CAACC,KAAI,IAAK;QAClB,IAAIA,KAAK,CAACL,QAAQ,CAACC,MAAK,KAAM,GAAG,EAAE;UACnCvB,MAAM,CAACyB,IAAI,CAAC,OAAO,CAAC;QACpB,CAAC,MAAK,IAAIE,KAAK,CAACL,QAAQ,CAACC,MAAK,KAAM,GAAG,EAAE;UACzC,IAAI,CAACd,OAAM,GAAI,OAAO;QACtB;MACA,CAAC,CAAC;IACF;EACA,CAAC;EACDmB,QAAQ,EAAE;IACVC,wBAAwBA,CAAA,EAAG;MAC3B,OAAQ,IAAI,CAACvB,QAAO,KAAM,IAAI,CAACC,UAAU,IAAK,qBAAoB;IAClE;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}