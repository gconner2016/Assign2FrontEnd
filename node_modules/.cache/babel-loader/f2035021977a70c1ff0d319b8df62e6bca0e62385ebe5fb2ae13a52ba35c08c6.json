{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'https://gjconner2016.pythonanywhere.com/';\nexport class APIService {\n  constructor() {}\n  getMovie(param_pk) {\n    const url = `${API_URL}/api/movies/${param_pk}`;\n    let jwtToken = localStorage.getItem('token');\n    console.log(\":::jwtToken:::::\" + jwtToken);\n    const headers = {\n      Authorization: `jwt ${jwtToken}`\n    };\n    return axios.get(url, {\n      headers: {\n        Authorization: `jwt ${jwtToken}`\n      }\n    });\n  }\n  getMovieList() {\n    const url = `${API_URL}/api/movies/`;\n    let jwtToken = localStorage.getItem('token');\n    console.log(\":::jwtToken:::::\" + jwtToken);\n    const headers = {\n      Authorization: `jwt ${jwtToken}`\n    };\n    return axios.get(url, {\n      headers: headers\n    });\n  }\n  addNewMovie(movie) {\n    const url = `${API_URL}/api/movies/`;\n    let jwtToken = localStorage.getItem('token');\n    const headers = {\n      Authorization: `jwt ${jwtToken}`\n    };\n    return axios.post(url, movie, {\n      headers: headers\n    });\n  }\n  updateMovie(movie) {\n    const url = `${API_URL}/api/movies/${movie.pk}`;\n    let jwtToken = localStorage.getItem('token');\n    const headers = {\n      Authorization: `jwt ${jwtToken}`\n    };\n    return axios.put(url, movie, {\n      headers: headers\n    });\n  }\n  deleteMovie(movie_Pk) {\n    const url = `${API_URL}/api/movies/${movie_Pk}`;\n    let jwtToken = localStorage.getItem('token');\n    const headers = {\n      Authorization: `jwt ${jwtToken}`\n    };\n    return axios.delete(url, {\n      headers: headers\n    });\n  }\n  authenticateLogin(credentials) {\n    const url = `${API_URL}/auth/`;\n    return axios.post(url, credentials);\n  }\n  registerUser(credentials) {\n    const url = `${API_URL}/register/`;\n    credentials.customusername = credentials.username;\n    return axios.post(url, credentials);\n  }\n}","map":{"version":3,"names":["axios","API_URL","APIService","constructor","getMovie","param_pk","url","jwtToken","localStorage","getItem","console","log","headers","Authorization","get","getMovieList","addNewMovie","movie","post","updateMovie","pk","put","deleteMovie","movie_Pk","delete","authenticateLogin","credentials","registerUser","customusername","username"],"sources":["C:/Users/gabrielconner/movie-fe/src/http/APIService.js"],"sourcesContent":["import axios from 'axios';\r\nconst API_URL = 'https://gjconner2016.pythonanywhere.com/';\r\nexport class APIService {\r\n constructor() {\r\n }\r\n getMovie(param_pk) {\r\n const url = `${API_URL}/api/movies/${param_pk}`;\r\n let jwtToken = localStorage.getItem('token');\r\n console.log(\":::jwtToken:::::\"+jwtToken);\r\n const headers = {Authorization: `jwt ${jwtToken}`};\r\n return axios.get(url, {headers: {Authorization: `jwt ${jwtToken}`}});\r\n }\r\n getMovieList() {\r\n const url = `${API_URL}/api/movies/`;\r\n let jwtToken = localStorage.getItem('token');\r\n console.log(\":::jwtToken:::::\"+jwtToken);\r\n const headers = {Authorization: `jwt ${jwtToken}`};\r\n return axios.get(url, {headers: headers});\r\n }\r\n addNewMovie(movie){\r\n const url = `${API_URL}/api/movies/`;\r\n let jwtToken = localStorage.getItem('token');\r\n const headers = {Authorization: `jwt ${jwtToken}`};\r\n return axios.post(url, movie, {headers: headers});\r\n }\r\n updateMovie(movie){\r\n const url = `${API_URL}/api/movies/${movie.pk}`;\r\n let jwtToken = localStorage.getItem('token');\r\n const headers = {Authorization: `jwt ${jwtToken}`};\r\n return axios.put(url, movie, {headers: headers});\r\n }\r\n deleteMovie(movie_Pk){\r\n const url = `${API_URL}/api/movies/${movie_Pk}`;\r\n let jwtToken = localStorage.getItem('token');\r\n const headers = {Authorization: `jwt ${jwtToken}`};\r\n return axios.delete(url, {headers: headers});\r\n }\r\n authenticateLogin(credentials) {\r\n const url = `${API_URL}/auth/`;\r\n return axios.post(url, credentials);\r\n }\r\n registerUser(credentials) {\r\n const url = `${API_URL}/register/`;\r\n credentials.customusername = credentials.username\r\n return axios.post(url, credentials);\r\n }\r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,MAAMC,OAAO,GAAG,0CAA0C;AAC1D,OAAO,MAAMC,UAAU,CAAC;EACvBC,WAAWA,CAAA,EAAG,CACd;EACAC,QAAQA,CAACC,QAAQ,EAAE;IACnB,MAAMC,GAAG,GAAI,GAAEL,OAAQ,eAAcI,QAAS,EAAC;IAC/C,IAAIE,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC5CC,OAAO,CAACC,GAAG,CAAC,kBAAkB,GAACJ,QAAQ,CAAC;IACxC,MAAMK,OAAO,GAAG;MAACC,aAAa,EAAG,OAAMN,QAAS;IAAC,CAAC;IAClD,OAAOP,KAAK,CAACc,GAAG,CAACR,GAAG,EAAE;MAACM,OAAO,EAAE;QAACC,aAAa,EAAG,OAAMN,QAAS;MAAC;IAAC,CAAC,CAAC;EACpE;EACAQ,YAAYA,CAAA,EAAG;IACf,MAAMT,GAAG,GAAI,GAAEL,OAAQ,cAAa;IACpC,IAAIM,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC5CC,OAAO,CAACC,GAAG,CAAC,kBAAkB,GAACJ,QAAQ,CAAC;IACxC,MAAMK,OAAO,GAAG;MAACC,aAAa,EAAG,OAAMN,QAAS;IAAC,CAAC;IAClD,OAAOP,KAAK,CAACc,GAAG,CAACR,GAAG,EAAE;MAACM,OAAO,EAAEA;IAAO,CAAC,CAAC;EACzC;EACAI,WAAWA,CAACC,KAAK,EAAC;IAClB,MAAMX,GAAG,GAAI,GAAEL,OAAQ,cAAa;IACpC,IAAIM,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC5C,MAAMG,OAAO,GAAG;MAACC,aAAa,EAAG,OAAMN,QAAS;IAAC,CAAC;IAClD,OAAOP,KAAK,CAACkB,IAAI,CAACZ,GAAG,EAAEW,KAAK,EAAE;MAACL,OAAO,EAAEA;IAAO,CAAC,CAAC;EACjD;EACAO,WAAWA,CAACF,KAAK,EAAC;IAClB,MAAMX,GAAG,GAAI,GAAEL,OAAQ,eAAcgB,KAAK,CAACG,EAAG,EAAC;IAC/C,IAAIb,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC5C,MAAMG,OAAO,GAAG;MAACC,aAAa,EAAG,OAAMN,QAAS;IAAC,CAAC;IAClD,OAAOP,KAAK,CAACqB,GAAG,CAACf,GAAG,EAAEW,KAAK,EAAE;MAACL,OAAO,EAAEA;IAAO,CAAC,CAAC;EAChD;EACAU,WAAWA,CAACC,QAAQ,EAAC;IACrB,MAAMjB,GAAG,GAAI,GAAEL,OAAQ,eAAcsB,QAAS,EAAC;IAC/C,IAAIhB,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC5C,MAAMG,OAAO,GAAG;MAACC,aAAa,EAAG,OAAMN,QAAS;IAAC,CAAC;IAClD,OAAOP,KAAK,CAACwB,MAAM,CAAClB,GAAG,EAAE;MAACM,OAAO,EAAEA;IAAO,CAAC,CAAC;EAC5C;EACAa,iBAAiBA,CAACC,WAAW,EAAE;IAC/B,MAAMpB,GAAG,GAAI,GAAEL,OAAQ,QAAO;IAC9B,OAAOD,KAAK,CAACkB,IAAI,CAACZ,GAAG,EAAEoB,WAAW,CAAC;EACnC;EACAC,YAAYA,CAACD,WAAW,EAAE;IAC1B,MAAMpB,GAAG,GAAI,GAAEL,OAAQ,YAAW;IAClCyB,WAAW,CAACE,cAAc,GAAGF,WAAW,CAACG,QAAQ;IACjD,OAAO7B,KAAK,CAACkB,IAAI,CAACZ,GAAG,EAAEoB,WAAW,CAAC;EACnC;AACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}